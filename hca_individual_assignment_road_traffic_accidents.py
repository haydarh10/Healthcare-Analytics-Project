# -*- coding: utf-8 -*-
"""HCA Individual Assignment - Road Traffic Accidents.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fJvm9esoJVaZsUx84q8WHHQjKvfUVm75

<pre>
<b>Author    :</b> Haydar Hamdan
<b>Title     :</b> MSBA 350E Individual Assignment
<b>Due Date  :</b> July 6, 2022 
</pre>

# Data Description / Background

The data was published by the Global Burden of Disease Collaborative Network and the main aim being to show the evolution of the number of deaths by traffic accidents globally over the period between 1990 until 2019. The main fields utilized in the dataset to produce a dashboard are: Country, year, number of deaths and the side of driving (i.e. driver on the right side or left side of the car). The question being posed is whether the number of fatal accidents has decreased with the advancement in technology and safety features used in production cars.

# Importing libraries to be used and the data set
"""

import numpy as np 
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.figure_factory as ff

"""# Exploratory Data Analysis (EDA)

## Loading and Analyzing the Data
"""

traffic_data = pd.read_csv('/content/drive/MyDrive/Traffic Data.csv') 

traffic_data.head()

# Dataset Dimensions:
traffic_data.shape

"""### Statistical Measures of the Data"""

traffic_data.describe()

"""### Deleting unnecessary fields, null values, etc.

"""

traffic_data.drop('Code',axis=1,inplace=True)
traffic_data.dropna(inplace=True)
traffic_data.reset_index(drop=True,inplace=True)

traffic_data.head()

# Aggregating by Country
data_agg = traffic_data.groupby('Entity').agg({'Deaths': 'sum', 'Historical_Population': 'sum'})

# Adding a new column to show the death as a RATE (death per 100k people)
data_agg['Death_per100K'] = ((data_agg['Deaths'] * 100000) / data_agg['Historical_Population'])

# Sorting
data_agg.sort_values('Death_per100K',ascending=True,inplace=True,kind='stable')

data_agg.head()

"""###Visualizations"""

fig = px.bar(data_agg[data_agg['Death_per100K'] != 0].head(10), y='Death_per100K', x=data_agg[data_agg['Death_per100K'] != 0].head(10).index, text_auto='.1s',
            title="Top 10 Countries Having the Lowest Traffic Deaths Rate (1990-2019)")
fig.update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
fig.update_layout(title_x=0.5,
                  titlefont_size=16)
fig.update_xaxes(ticklabelposition="inside top", title='Country', title_font = {"size": 12})
fig.update_yaxes(ticklabelposition="inside top", title_font = {"size": 12})
fig.show()

#Total Deaths per Year
total_deaths_year_wise=traffic_data.groupby('Year')['Deaths'].sum().reset_index()
total_deaths_year_wise.columns=['Year','Total Deaths']
total_deaths_year_wise=total_deaths_year_wise.sort_values('Total Deaths',ascending=False)
total_deaths_year_wise.head()

#Plotting
import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(26,8))
sns.barplot(data=total_deaths_year_wise,x='Year',y='Total Deaths',palette='tab10')
plt.title('Total Deaths Per Year  (1990-2019)',size=30)
plt.ylabel('Total Deaths',size=20)
plt.xlabel('Year',size=20)
plt.xticks(rotation=40);

total_deaths_region_wise=traffic_data.groupby('Entity')['Deaths'].sum().reset_index()
total_deaths_region_wise.columns=['Entity','Total Deaths']
total_deaths_region_wise=total_deaths_region_wise.sort_values('Total Deaths',ascending=False)[:15]
total_deaths_region_wise.head()

regions=total_deaths_region_wise['Entity'].tolist()
regions[:10]

plt.figure(figsize=(28,12))
for region in regions:
    r=traffic_data.loc[traffic_data['Entity']==region]
    sns.lineplot(data=r,x='Year',y='Deaths',palette='tab10')
    plt.title(f'Year wise Distribution of Deaths from 1990-2019 for 15 Regions with max Deaths',size=30)
    plt.ylabel('Deaths',size=20)
    plt.xlabel('Year',size=20)
    plt.legend(regions,bbox_to_anchor=(1.0,1.0))
    plt.xticks(rotation=40);
plt.show()